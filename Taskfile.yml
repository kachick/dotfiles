# https://taskfile.dev

version: '3'

silent: false

tasks:
  default:
    deps:
      - help

  apply:
    cmds:
      - nix run .#home-manager -- switch -b backup --show-trace --flake .#$USER@$NIX_DEVICE_SPECIFIER

  test:
    deps:
      - test-go
    cmds:
      # -n = dry-run
      - nix run .#home-manager -- switch -n -b backup --show-trace --flake .#$USER@$NIX_DEVICE_SPECIFIER

  test-go:
    internal: true
    sources:
      - '**.go'
    cmds:
      - go test ./...
      - cd ./pkgs/reponame && go test ./...

  mkdir:
    internal: true
    cmds:
      - mkdir -p dist/race

  setup:
    deps:
      - build-cmd
    cmds:
      - cp .githooks/* .git/hooks/
      - git config --local core.whitespace cr-at-eol

  fmt:
    cmds:
      - treefmt

  build-cmd:
    internal: true
    deps:
      - mkdir
    sources:
      - ./cmd/**.go
    generates:
      - dist/**
    # Checking race condition requires CGO_ENABLED=1 and gcc. See https://github.com/golang/go/issues/9918
    cmds:
      - go build -v -o dist ./...

  build-lint:
    internal: true
    deps:
      - mkdir
    cmds:
      - go build -v -o dist/lint ./cmd/lint
    sources:
      - internal/fileutils/*.go
      - ./cmd/lint/*.go
    generates:
      - dist/lint

  lint:
    deps:
      - build-lint
    cmds:
      - ./dist/lint

  lint-all:
    deps:
      - build-lint
    cmds:
      - ./dist/lint -all

  check:
    deps:
      - 'build-cmd'
      - 'test'
      - 'lint-all'

  update:
    cmds:
      - nix flake update --commit-lock-file

  help:
    cmds:
      - task --list-all

  workspace:
    cmds:
      - zellij --layout ./config/zellij/layouts/dotfiles.kdl

  sandbox:
    cmds:
      - ./containers/sandbox.bash

  ghcr-*:
    vars:
      TAG: '{{index .MATCH 0}}'
    cmds:
      - './containers/sandbox-with-ghcr.bash {{.TAG}}'

  build-container:
    cmds:
      - './containers/build.bash'

  deps:
    deps:
      - build-cmd
    cmds:
      - ./dist/deps

  # Basically giveup to develop on macOS. However I need to use task-runner for minimum use.
  ci-dev:
    deps:
      - 'default'
      - 'setup'
      - 'deps'
      # 'test', # Needs home-manager, so needless in Nix-CI
      - 'lint-all'
      - 'fmt'

  # Basically giveup to develop on macOS. However I need to use task-runner for minimum use.
  ci-darwin:
    cmds:
      - task --version
