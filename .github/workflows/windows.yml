name: CI - Windows

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
    paths:
      - '.github/workflows/windows.yml'
      - '**.go'
      - 'go.*'
      - '.goreleaser.yaml'
      - 'config'
  pull_request:
    paths:
      - '.github/workflows/windows.yml'
      - '**.go'
      - 'go.*'
      - '.goreleaser.yaml'
      - 'config'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  checks: read # For private repositories
  actions: read # For private repositories

defaults:
  run:
    shell: pwsh

jobs:
  setup:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache-dependency-path: 'go.sum'
      - name: Install goreleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          install-only: true
          version: 'v1.24.0' # selfup { "regex": "\\d[^']+", "script": "goreleaser --version | grep 'GitVersion:' | tr -s ' ' | cut -d ' ' -f 2" }
      - name: Make sure there are what files before build
        run: Get-ChildItem
      - name: Build winit-*
        run: goreleaser build --snapshot --clean
      - name: Make sure there are what files after build
        run: |
          Get-ChildItem
          Get-ChildItem .\dist
      # https://github.com/goreleaser/goreleaser-action/tree/5fdedb94abba051217030cc86d4523cf3f02243d#upload-artifacts
      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: winit
          path: dist/**/*.exe
      - name: Check Windows Defender does not false positive detect the product
        run: |
          & "C:\Program Files\Windows Defender\MpCmdRun.exe" -SignatureUpdate
          & "C:\Program Files\Windows Defender\MpCmdRun.exe" -Scan -ScanType 3 -File "$(pwd)\dist\winit-conf.exe"
          & "C:\Program Files\Windows Defender\MpCmdRun.exe" -Scan -ScanType 3 -File "$(pwd)\dist\winit-reg.exe"
          & "C:\Program Files\Windows Defender\MpCmdRun.exe" -Scan -ScanType 3 -File "$(pwd)\dist\winit-wsl.exe"
      # Do not write depending winget and WSL2 logcs for now
      # https://github.com/microsoft/winget-cli/issues/3872
      # https://github.com/actions/runner-images/issues/910
      # https://github.com/microsoft/winget-cli/blob/b07d2ebb7d865f95320e2bc708a2d1efb2152c5a/README.md#L14
      - name: Rebel against unacceptable default
        run: |
          .\dist\winit-reg.exe list
          .\dist\winit-reg.exe run --all
      # This logics can be finished even if tools are not installed
      - name: Put config files around terminals
        run: |
          .\dist\winit-conf.exe -pwsh_profile_path "$PROFILE"
      - name: Make sure it correctly copied some config files
        run: |
          Get-Content "$PROFILE"
      - name: Release the product
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          goreleaser release --clean
