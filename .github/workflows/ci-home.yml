name: üè†
on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/ci-home.yml'
      - '**/home-manager/**.nix'
      - '*.nix'
      - 'flake.*'
      - 'Makefile.toml'
  pull_request:
    paths:
      - '.github/workflows/ci-home.yml'
      - '**/home-manager/**.nix'
      - '*.nix'
      - 'flake.*'
      - 'Makefile.toml'
  schedule:
    # Every 10:42 JST
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
    - cron: '42 1 * * *'
  workflow_dispatch:

jobs:
  home-manager:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - macos-14 # M1 - https://github.blog/changelog/2024-01-30-github-actions-introducing-the-new-m1-macos-runner-available-to-open-source/
          # Disabled macOS-13 because the runner is too slow.
          # I have Intel Mac, but it have latest darwin. So only testing in ubuntu runner and macos-14 runner is enough.
          # - macos-13 # Intel

    runs-on: ${{ matrix.os }}
    steps:
      - uses: DeterminateSystems/nix-installer-action@v10
      - name: Print some dotfiles overviews
        run: |
          cat /etc/nix/nix.conf
          ls -alh ~
      - uses: DeterminateSystems/magic-nix-cache-action@v4
      - uses: actions/checkout@v4
      # https://www.reddit.com/r/Nix/comments/1443k3o/comment/jr9ht5g/?utm_source=reddit&utm_medium=web2x&context=3
      - run: mkdir -p ~/.local/state/nix/profiles
      - run: nix develop --command echo 'This step should be done before any other "nix develop" steps because of measuring Nix build time'
      - run: nix run .#home-manager -- switch -b backup --flake .#github-actions
      - name: 'Make sure no possibilities in nix store around #530 (around CVE-2024-3094)'
        run: |
          which xz
          # Can be used when the xz is using /nix/store one
          # nix-store --query --referrers "$(which xz)"
          nix run .#check_no_dirty_xz_in_nix_store
      - name: Print some paths and versions
        run: |
          which fish
          which zsh
          which bash
          which ruby
          which irb
          which ssh
      - name: Make sure the $PATH for bash is not overridden as like the `path_helper`. See https://github.com/kachick/dotfiles/issues/503
        run: |
          [[ "$(zsh -c 'which bash')" == "$HOME/.nix-profile/bin/bash" ]]
          [[ "$(bash -c 'which bash')" == "$HOME/.nix-profile/bin/bash" ]]
          [[ "$(fish -c 'which bash')" == "$HOME/.nix-profile/bin/bash" ]]
      # Do not use interactive mode here.
      # Solutions as https://github.com/actions/runner/issues/241#issuecomment-924327172 will not fit with several problems
      - name: Run customized dependencies
        run: |
          fish --command 'starship --version'
          zsh -c zsh -c 'which la; which p'
          zsh -c 'ruby --version'
          zsh -c 'irb --version'
          zsh -c 'alacritty --version'
          zsh -c 'ssh -V'
      - name: Run homemade commands
        run: |
          zsh -c 'la ~; lat ~/.config'
          zsh -c "p neo-cowsay hello --command 'cowsay --rainbow \$(hello)'"
      - name: Backup generated config
        run: |
          zsh -c 'archive-home-files home-manager-generation-home-files'
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'home-files-${{ github.sha }}-${{ runner.os }}'
          path: home-manager-generation-home-files.tar.gz
