name: â¬¢ðŸ¦­
on:
  push:
    tags:
      - 'v*'
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.vscode/**'
      - '.git**'
      - '!.github/workflows/container.yml'
  pull_request:
    paths-ignore:
      - '**.md'
      - '.vscode/**'
      - '.git**'
      - '!.github/workflows/container.yml'
  workflow_dispatch:

jobs:
  # podman can handle lowercase. So normalize the outputs
  get-meta:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    outputs:
      started_at: ${{ steps.timestamp.outputs.started_at }}
      tags: ${{ steps.tags.outputs.tags }}
    steps:
      - name: Install gh-action-escape
        run: curl -fsSL https://raw.githubusercontent.com/kachick/gh-action-escape/main/scripts/install-in-github-action.sh | sh -s v0.2.0
      - name: Get started timestamp
        id: timestamp
        run: |
          # Do not use ":" delimiter as iso-8601/rfc-3339, it cannot be used in container tag
          date --utc '+%Y%m%d-%H%M%S-%Z' | ruby -pe '$_.downcase!' | gh-action-escape -name=started_at | tee -a "$GITHUB_OUTPUT"
      - name: Generate tags for the image
        id: tags
        # https://github.com/orgs/community/discussions/26557#discussioncomment-3252327
        run: |
          always='${{ github.sha }} ${{ steps.timestamp.outputs.started_at }}'
          special=''
          if [ '${{ github.event_name }}' = 'pull_request' ]; then
            special='pr-${{ github.event.number }}'
          elif [ '${{ github.event_name }}' = 'push'  ] && [ '${{ github.ref_name }}' = '${{ github.event.repository.default_branch }}' ]; then
            special='latest'
          else
            :
          fi
          echo "${special} ${always}" | gh-action-escape -name=tags | tee -a "$GITHUB_OUTPUT"
  build_and_push:
    needs: [get-meta]
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - name: Logging initial dependency versions
        run: |
          podman version
          crun --version
      - name: Base setup
        run: |
          # Update crun: https://noobient.com/2023/11/15/fixing-ubuntu-containers-failing-to-start-with-systemd/
          # TODO: Integrate selfup here
          CRUN_VER='1.14.4'
          mkdir -p "${HOME}/.local/bin"
          curl -L "https://github.com/containers/crun/releases/download/${CRUN_VER}/crun-${CRUN_VER}-linux-amd64" -o "${HOME}/.local/bin/crun"
          chmod +x "${HOME}/.local/bin/crun"
      # We can remove this since ubuntu-24.04, but keeping maybe better
      - name: Update crun in podman
        run: |
          mkdir -p "${HOME}/.config/containers"
          cat << EOF > "${HOME}/.config/containers/containers.conf"
          [engine.runtimes]
          crun = [
            "${HOME}/.local/bin/crun",
            "/usr/bin/crun"
          ]
          EOF
      - name: Logging dependency versions
        run: |
          podman version
          crun --version
      - uses: actions/checkout@v4
      - name: Build Image
        uses: redhat-actions/buildah-build@7a95fa7ee0f02d552a32753e7414641a04307056 # v2.13
        with:
          image: systemd-prepared
          containerfiles: |
            containers/Containerfile
          oci: true
      - name: Start systemd
        id: start-systemd
        run: |
          set -euxo pipefail
          container_id="$(podman run --detach --rm systemd-prepared)"
          echo container_id="$container_id" | tee -a "$GITHUB_OUTPUT"
      - name: Wait for the systemd to be ready
        run: 'sleep 2'
      - name: Run Nix commands and cleanup provisioners
        run: |
          set -euxo pipefail
          podman exec --user=user -it '${{ steps.start-systemd.outputs.container_id }}' /provisioner/needs_systemd.bash
          podman exec --user=root -it '${{ steps.start-systemd.outputs.container_id }}' rm -rf /provisioner
      - name: Check no personal name in that config
        run: |
          # https://unix.stackexchange.com/a/340729
          assign_stdin_to_global_command_variable() {
            command="$(cat)"
          }

          assign_stdin_to_global_command_variable <<'EOF'
          set -uxo
          # https://unix.stackexchange.com/questions/311090/how-to-disable-set-x
          set +e
          /home/user/.nix-profile/bin/rg --hidden --follow --glob='!.local/state' --glob='!.nix-*' --pcre2 --regexp '${{ github.repository_owner }}(?!/dotfiles)'
          # Need to check the exit code if we want to make sure "not found" in grep family
          # https://github.com/BurntSushi/ripgrep/issues/1290#issuecomment-761170095

          ripgrep_exit_code="$?" # Do not directly use the $? to prevent inserting another command as a human error
          [[ "$ripgrep_exit_code" -eq 1 ]]
          EOF

          podman exec --user=user --workdir=/home/user -it '${{ steps.start-systemd.outputs.container_id }}' bash -c "$command"
      - name: Persist the container to image
        run: |
          podman commit '${{ steps.start-systemd.outputs.container_id }}' home
          podman kill '${{ steps.start-systemd.outputs.container_id }}'
          podman tag home home:latest
          podman tag home home:${{ github.sha }}
          podman tag home home:${{ needs.get-meta.outputs.started_at }}
      - name: Test the created image
        run: |
          set -euxo pipefail
          container_id="$(podman run --detach --rm home:${{ needs.get-meta.outputs.started_at }})"
          sleep 2 # Wait for the systemd to be ready
          podman exec --user=user "$container_id" cat /etc/nix/nix.conf
          podman exec --user=user --workdir='/home/user' -it "$container_id" '/home/user/.nix-profile/bin/zsh' -c 'la; lat ~/.config'
          podman kill "$container_id"
      - name: Push To ghcr.io
        id: push-to-ghcr
        if: ${{ github.actor == github.repository_owner }}
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2.8
        with:
          image: home
          tags: ${{ needs.get-meta.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Log pushed outputs
        if: ${{ github.actor == github.repository_owner }}
        run: echo "${{ toJSON(steps.push-to-ghcr.outputs) }}"
      - name: Post comments
        if: ${{ (github.actor == github.repository_owner) && (github.event_name == 'pull_request') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment ${{ github.event.number }} --body='UPDATE ME'
