# https://github.com/NixOS/nixos-artwork/blob/35ebbbf01c3119005ed180726c388a01d4d1100c/logo/README.md#L5
name: ❄️
on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/ci-nix.yml'
      - '**.nix'
      - 'flake.*'
      - 'Taskfile.yml'
      - 'cmd/**'
  pull_request:
    paths:
      - '.github/workflows/ci-nix.yml'
      - '**.nix'
      - 'flake.*'
      - 'Taskfile.yml'
      - 'cmd/**'
  schedule:
    # Every 10:42 JST
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
    - cron: '42 1 * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  inspect:
    # Only on Linux is enough to check the flake
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: DeterminateSystems/nix-installer-action@v20
      - name: Print some dotfiles overviews
        shell: bash -eu -o pipefail {0}
        run: |
          </etc/nix/nix.conf
          ls -alh ~
      - name: Inspect flake outputs
        run: |
          nix flake show
          nix flake show . --json 2>/dev/null | jq '.packages | ."x86_64-linux" | to_entries | map("\(.key) # \(.value.description)")'
      - run: nix flake check --impure
        env:
          # Required to clarify allowing unfree even in check ... :<
          # This does not make problem only here, because this step does not upload any artifacts.
          NIXPKGS_ALLOW_UNFREE: '1'

  tasks:
    defaults:
      run:
        shell: nix develop --command bash -eu -o pipefail {0}
    strategy:
      fail-fast: false
      matrix:
        runner:
          - ubuntu-24.04
          - macos-13 # Don't use macos-14 or later. macos-13 is the last runner of x86_64-darwin
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: ./.github/actions/setup-nix
        with:
          cachix-auth-token: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Measure nix shell initialization time
        run: echo 'This step should be done before any other "nix develop" steps'
      - run: task ci-dev
        if: runner.os == 'Linux'
      - run: task ci-darwin
        if: runner.os == 'macOS'

  push-binary-cache:
    strategy:
      fail-fast: false
      matrix:
        runner:
          - ubuntu-24.04
          # - macos-13 # Don't use macos-14 or later. macos-13 is the last runner of x86_64-darwin
        pname:
          - filen-rclone
          - kanata-tray
          - ringboard
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 180
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: ./.github/actions/setup-nix
        with:
          cachix-auth-token: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: 'nix build .#${{ matrix.pname }}'
